{"ast":null,"code":"import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from \"./actionTypes\";\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    // Hey dispatcher, go tell all the stores that a course was just created.\n    dispatcher.dispatch({\n      actionType: course.id ? actionTypes.UPDATE_COURSE : actionTypes.CREATE_COURSE,\n      course: savedCourse\n    });\n  });\n}\nexport function loadProfessors() {\n  return professorApi.getProfessors().then(professors => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_PROFESSORS,\n      professors: professors\n    });\n  });\n}\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses: courses\n    });\n  });\n}\nexport function deleteCourse(id) {\n  //debugger;\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id: id\n    });\n  });\n}","map":{"version":3,"sources":["C:\\Users\\SubGerenteInform\\Desktop\\maestriaII\\Nueva carpeta\\react-flux\\src\\actions\\courseActions.js"],"names":["dispatcher","courseApi","actionTypes","saveCourse","course","then","savedCourse","dispatch","actionType","id","UPDATE_COURSE","CREATE_COURSE","loadProfessors","professorApi","getProfessors","professors","LOAD_PROFESSORS","loadCourses","getCourses","courses","LOAD_COURSES","deleteCourse","DELETE_COURSE"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAOH,SAAS,CAACE,UAAV,CAAqBC,MAArB,EAA6BC,IAA7B,CAAkCC,WAAW,IAAI;AACtD;AACAN,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAClBC,MAAAA,UAAU,EAAEJ,MAAM,CAACK,EAAP,GACRP,WAAW,CAACQ,aADJ,GAERR,WAAW,CAACS,aAHE;AAKlBP,MAAAA,MAAM,EAAEE;AALU,KAApB;AAOD,GATM,CAAP;AAUD;AAED,OAAO,SAASM,cAAT,GAA0B;AAC/B,SAAOC,YAAY,CAACC,aAAb,GAA6BT,IAA7B,CAAkCU,UAAU,IAAI;AACrDf,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAClBC,MAAAA,UAAU,EAAEN,WAAW,CAACc,eADN;AAElBD,MAAAA,UAAU,EAAEA;AAFM,KAApB;AAID,GALM,CAAP;AAMD;AACD,OAAO,SAASE,WAAT,GAAuB;AAC5B,SAAOhB,SAAS,CAACiB,UAAV,GAAuBb,IAAvB,CAA4Bc,OAAO,IAAI;AAC5CnB,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAClBC,MAAAA,UAAU,EAAEN,WAAW,CAACkB,YADN;AAElBD,MAAAA,OAAO,EAAEA;AAFS,KAApB;AAID,GALM,CAAP;AAMD;AAED,OAAO,SAASE,YAAT,CAAsBZ,EAAtB,EAA0B;AAC/B;AACA,SAAOR,SAAS,CAACoB,YAAV,CAAuBZ,EAAvB,EAA2BJ,IAA3B,CAAgC,MAAM;AAC3CL,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAClBC,MAAAA,UAAU,EAAEN,WAAW,CAACoB,aADN;AAElBb,MAAAA,EAAE,EAAEA;AAFc,KAApB;AAID,GALM,CAAP;AAMD","sourcesContent":["import dispatcher from \"../appDispatcher\";\r\nimport * as courseApi from \"../api/courseApi\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport function saveCourse(course) {\r\n  return courseApi.saveCourse(course).then(savedCourse => {\r\n    // Hey dispatcher, go tell all the stores that a course was just created.\r\n    dispatcher.dispatch({\r\n      actionType: course.id\r\n        ? actionTypes.UPDATE_COURSE\r\n        : actionTypes.CREATE_COURSE,\r\n        \r\n      course: savedCourse\r\n    });\r\n  });\r\n}\r\n\r\nexport function loadProfessors() {\r\n  return professorApi.getProfessors().then(professors => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.LOAD_PROFESSORS,\r\n      professors: professors\r\n    });\r\n  });\r\n}\r\nexport function loadCourses() {\r\n  return courseApi.getCourses().then(courses => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.LOAD_COURSES,\r\n      courses: courses\r\n    });\r\n  });\r\n}\r\n\r\nexport function deleteCourse(id) {\r\n  //debugger;\r\n  return courseApi.deleteCourse(id).then(() => {\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.DELETE_COURSE,\r\n      id: id\r\n    });\r\n  });\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}