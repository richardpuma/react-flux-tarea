{"ast":null,"code":"import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/professors/\";\nexport function getProfessors() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\nexport function saveProfessor(professor) {\n  return fetch(baseUrl + (professor.id || \"\"), {\n    method: professor.id ? \"PUT\" : \"POST\",\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(professor)\n  }).then(handleResponse).catch(handleError);\n}\nexport function deleteProfessor(professorId) {\n  return fetch(baseUrl + professorId, {\n    method: \"DELETE\"\n  }).then(handleResponse).catch(handleError);\n}","map":{"version":3,"sources":["C:\\Users\\SubGerenteInform\\Desktop\\maestriaII\\Nueva carpeta\\react-flux\\src\\api\\professorApi.js"],"names":["handleResponse","handleError","baseUrl","process","env","REACT_APP_API_URL","getProfessors","fetch","then","catch","saveProfessor","professor","id","method","headers","body","JSON","stringify","deleteProfessor","professorId"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,YAA5C;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,cAAhD;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAOC,KAAK,CAACL,OAAD,CAAL,CACJM,IADI,CACCR,cADD,EAEJS,KAFI,CAEER,WAFF,CAAP;AAGD;AAED,OAAO,SAASS,aAAT,CAAuBC,SAAvB,EAAkC;AACvC,SAAOJ,KAAK,CAACL,OAAO,IAAIS,SAAS,CAACC,EAAV,IAAgB,EAApB,CAAR,EAAiC;AAC3CC,IAAAA,MAAM,EAAEF,SAAS,CAACC,EAAV,GAAe,KAAf,GAAuB,MADY;AACJ;AACvCE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFkC;AAG3CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;AAHqC,GAAjC,CAAL,CAKJH,IALI,CAKCR,cALD,EAMJS,KANI,CAMER,WANF,CAAP;AAOD;AAED,OAAO,SAASiB,eAAT,CAAyBC,WAAzB,EAAsC;AAC3C,SAAOZ,KAAK,CAACL,OAAO,GAAGiB,WAAX,EAAwB;AAAEN,IAAAA,MAAM,EAAE;AAAV,GAAxB,CAAL,CACJL,IADI,CACCR,cADD,EAEJS,KAFI,CAEER,WAFF,CAAP;AAGD","sourcesContent":["import { handleResponse, handleError } from \"./apiUtils\";\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/professors/\";\r\n\r\nexport function getProfessors() {\r\n  return fetch(baseUrl)\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveProfessor(professor) {\r\n  return fetch(baseUrl + (professor.id || \"\"), {\r\n    method: professor.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(professor)\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteProfessor(professorId) {\r\n  return fetch(baseUrl + professorId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}