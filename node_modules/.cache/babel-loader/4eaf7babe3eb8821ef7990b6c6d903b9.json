{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SubGerenteInform\\\\Desktop\\\\maestriaII\\\\Nueva carpeta\\\\react-flux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\SubGerenteInform\\\\Desktop\\\\maestriaII\\\\Nueva carpeta\\\\react-flux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\SubGerenteInform\\\\Desktop\\\\maestriaII\\\\Nueva carpeta\\\\react-flux\\\\src\\\\components\\\\ManageCoursePage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\"; //import { Prompt } from \"react-router-dom\";\n\nimport CourseForm from \"./CourseForm\";\nimport courseStore from \"../stores/courseStore\";\nimport { toast } from \"react-toastify\";\nimport CourseList from \"./ProfessorList\";\nimport * as courseActions from \"../actions/courseActions\";\n\nconst ManageCoursePage = props => {\n  //debugger;\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState(courseStore.getCourses()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        courses = _useState4[0],\n        setCourses = _useState4[1];\n\n  const _useState5 = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    professorId: null,\n    category: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        course = _useState6[0],\n        setCourse = _useState6[1];\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n    } else if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n\n    return () => courseStore.removeChangeListener(onChange);\n  }, [courses.length, props.match.params.slug]);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function handleChange({\n    target\n  }) {\n    //debugger;\n    setCourse(_objectSpread({}, course, {\n      [target.name]: target.value\n    }));\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.professorId) _errors.professorId = \"professor ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    course: course,\n    errors: errors,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(CProfessorList, {\n    professors: professors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["C:\\Users\\SubGerenteInform\\Desktop\\maestriaII\\Nueva carpeta\\react-flux\\src\\components\\ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseStore","toast","CourseList","courseActions","ManageCoursePage","props","errors","setErrors","getCourses","courses","setCourses","id","slug","title","professorId","category","course","setCourse","addChangeListener","onChange","match","params","length","loadCourses","getCourseBySlug","removeChangeListener","handleChange","target","name","value","formIsValid","_errors","Object","keys","handleSubmit","event","preventDefault","saveCourse","then","history","push","success","professors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//import { Prompt } from \"react-router-dom\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport { toast } from \"react-toastify\";\r\nimport CourseList from \"./ProfessorList\";\r\nimport * as courseActions from \"../actions/courseActions\";\r\n\r\nconst ManageCoursePage = props => {\r\n  //debugger;\r\n  const [errors, setErrors] = useState({});\r\n  const [courses, setCourses] = useState(courseStore.getCourses());\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    professorId: null,\r\n    category: \"\"\r\n  });\r\n\r\n  useEffect(() => {\r\n    courseStore.addChangeListener(onChange);\r\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\r\n    if (courses.length === 0) {\r\n      courseActions.loadCourses();\r\n    } else if (slug) {\r\n      setCourse(courseStore.getCourseBySlug(slug));\r\n    }\r\n    return () => courseStore.removeChangeListener(onChange);\r\n  }, [courses.length, props.match.params.slug]);\r\n\r\n  function onChange() {\r\n    setCourses(courseStore.getCourses());\r\n  }\r\n\r\n  function handleChange({ target }) {\r\n    //debugger;\r\n    setCourse({\r\n      ...course,\r\n      [target.name]: target.value\r\n    });\r\n  }\r\n\r\n  function formIsValid() {\r\n    const _errors = {};\r\n    if (!course.title) _errors.title = \"Title is required\";\r\n    if (!course.professorId) _errors.professorId = \"professor ID is required\";\r\n    if (!course.category) _errors.category = \"Category is required\";\r\n    setErrors(_errors);\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!formIsValid()) return;\r\n    courseActions.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n      toast.success(\"Course saved.\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      {/*<Prompt when={true} message=\"Are you sure you want to leave?\" />*/}\r\n      {/*props.match.params.slug*/}\r\n      <CourseForm\r\n        course={course}\r\n        errors={errors}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit} />\r\n             <CProfessorList professors={professors} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManageCoursePage;"]},"metadata":{},"sourceType":"module"}